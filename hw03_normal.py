# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
import random

my_list = [12, 25, 144, 11, 17, -5, -893, 14, 81, 0]
roots = []

for i in my_list:
    if i >= 0:
        if not i ** 0.5 % 1:
            roots.append(int(i ** 0.5))

print(roots)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)


thirty_one = ("01", "03", "05", "07", "08", "10", "12")
feb = "02"
number_names = {"01": "первое", "02": "второе", "03": "третье", "04": "четвёртое", "05": "пятое", "06": "шестое",
                "07": "седьмое", "08": "восьмое", "09": "девятое", "10": "десятое", "11": "одиннадцатое",
                "12": "двенадцатое", "13": "тринадцатое", "14": "четырнадцатое", "15": "пятнадцатое",
                "16": "шестнадцатое", "17": "семнадцатое", "18": "восемнадцатое", "19": "девятнадцатое",
                "20": "двадцатое", "21": "двадцать первое", "22": "двадцать второе", "23": "двадцать третье",
                "24": "двадцать четвёртое", "25": "двадцать пятое", "26": "двадцать шестое", "27": "двадцать седьмое",
                "28": "двадцать восьмое", "29": "двадцать девятое", "30": "тридцатое", "31": "тридцать первое"}
months = {"01": "января", "02": "февраля", "03": "марта", "04": "апреля", "05": "мая", "06": "июня", "07": "июля",
          "08": "августа", "09": "сентября", "10": "октября", "11": "ноября", "12": "декабря"}

my_date = input("Введите дату в формате дд.мм.гггг\n")

nums = my_date.split(sep=".")

if nums[0] in number_names.keys():  # Для защиты от нереальных дат
    if nums[1] in months.keys():
        if nums[1] == feb:
            number_names.pop("29")  # Обойдёмся без високосных
            number_names.pop("30")
            number_names.pop("31")
        elif nums[1] not in thirty_one:
            number_names.pop("31")
        try:
            print("{} {} {} года".format(number_names[nums[0]], months[nums[1]], nums[2]))
        except KeyError:
            print("В указанном месяце нет такого дня")
    else:
        print("Неверно введён месяц")
else:
    print("Неверно введён день")

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

quantity = int(input("Введите количество элементов:\n"))

rand_list = []

for i in range(quantity):
    rand_list.append(random.randint(-100, 100))

# rand_list = [random.randint(-100, 100) for x in range(quantity)]

print(rand_list)